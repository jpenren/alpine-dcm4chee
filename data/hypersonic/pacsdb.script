SET DATABASE UNIQUE NAME HSQLDB5463D88C5D
SET DATABASE GC 0
SET DATABASE DEFAULT RESULT MEMORY ROWS 0
SET DATABASE EVENT LOG LEVEL 0
SET DATABASE TRANSACTION CONTROL LOCKS
SET DATABASE DEFAULT ISOLATION LEVEL READ COMMITTED
SET DATABASE TRANSACTION ROLLBACK ON CONFLICT TRUE
SET DATABASE TEXT TABLE DEFAULTS ''
SET DATABASE SQL NAMES FALSE
SET DATABASE SQL REFERENCES FALSE
SET DATABASE SQL SIZE FALSE
SET DATABASE SQL TYPES FALSE
SET DATABASE SQL TDC DELETE TRUE
SET DATABASE SQL TDC UPDATE TRUE
SET DATABASE SQL TRANSLATE TTI TYPES TRUE
SET DATABASE SQL TRANSLATE TTI TYPES TRUE
SET DATABASE SQL CONCAT NULLS TRUE
SET DATABASE SQL UNIQUE NULLS TRUE
SET DATABASE SQL CONVERT TRUNCATE TRUE
SET DATABASE SQL AVG SCALE 0
SET DATABASE SQL DOUBLE NAN TRUE
SET FILES WRITE DELAY 10
SET FILES BACKUP INCREMENT FALSE
SET FILES CACHE SIZE 10000
SET FILES CACHE ROWS 50000
SET FILES SCALE 32
SET FILES LOB SCALE 32
SET FILES DEFRAG 0
SET FILES NIO TRUE
SET FILES NIO SIZE 256
SET FILES LOG TRUE
SET FILES LOG SIZE 200
CREATE USER SA PASSWORD DIGEST 'd41d8cd98f00b204e9800998ecf8427e'
CREATE SCHEMA PUBLIC AUTHORIZATION DBA
SET SCHEMA PUBLIC
CREATE MEMORY TABLE PUBLIC.TIMERS(TIMERID VARCHAR(80) NOT NULL,TARGETID VARCHAR(250) NOT NULL,INITIALDATE TIMESTAMP NOT NULL,TIMERINTERVAL BIGINT,INSTANCEPK VARBINARY(32768),INFO VARBINARY(32768),CONSTRAINT TIMERS_PK PRIMARY KEY(TIMERID,TARGETID))
CREATE MEMORY TABLE PUBLIC.JBM_DUAL(DUMMY INTEGER NOT NULL PRIMARY KEY)
CREATE MEMORY TABLE PUBLIC.JBM_MSG_REF(MESSAGE_ID BIGINT NOT NULL,CHANNEL_ID BIGINT NOT NULL,TRANSACTION_ID BIGINT,STATE CHARACTER(1),ORD BIGINT,PAGE_ORD BIGINT,DELIVERY_COUNT INTEGER,SCHED_DELIVERY BIGINT,PRIMARY KEY(MESSAGE_ID,CHANNEL_ID))
CREATE INDEX JBM_MSG_REF_TX ON PUBLIC.JBM_MSG_REF(TRANSACTION_ID,STATE)
CREATE MEMORY TABLE PUBLIC.JBM_MSG(MESSAGE_ID BIGINT NOT NULL PRIMARY KEY,RELIABLE CHARACTER(1),EXPIRATION BIGINT,TIMESTAMP BIGINT,PRIORITY TINYINT,TYPE TINYINT,HEADERS VARBINARY(16777216),PAYLOAD VARBINARY(16777216))
CREATE MEMORY TABLE PUBLIC.JBM_TX(NODE_ID INTEGER,TRANSACTION_ID BIGINT NOT NULL PRIMARY KEY,BRANCH_QUAL VARBINARY(254),FORMAT_ID INTEGER,GLOBAL_TXID VARBINARY(254))
CREATE MEMORY TABLE PUBLIC.JBM_COUNTER(NAME VARCHAR(255) NOT NULL PRIMARY KEY,NEXT_ID BIGINT)
CREATE MEMORY TABLE PUBLIC.JBM_ID_CACHE(NODE_ID INTEGER NOT NULL,CNTR INTEGER NOT NULL,JBM_ID VARCHAR(255),PRIMARY KEY(NODE_ID,CNTR))
CREATE MEMORY TABLE PUBLIC.JBM_USER(USER_ID VARCHAR(32) NOT NULL PRIMARY KEY,PASSWD VARCHAR(32) NOT NULL,CLIENTID VARCHAR(128))
CREATE MEMORY TABLE PUBLIC.JBM_ROLE(ROLE_ID VARCHAR(32) NOT NULL,USER_ID VARCHAR(32) NOT NULL,PRIMARY KEY(USER_ID,ROLE_ID))
CREATE MEMORY TABLE PUBLIC.JBM_POSTOFFICE(POSTOFFICE_NAME VARCHAR(255) NOT NULL,NODE_ID INTEGER NOT NULL,QUEUE_NAME VARCHAR(255) NOT NULL,CONDITION VARCHAR(1023),SELECTOR VARCHAR(1023),CHANNEL_ID BIGINT,CLUSTERED CHARACTER(1),ALL_NODES CHARACTER(1),PRIMARY KEY(POSTOFFICE_NAME,NODE_ID,QUEUE_NAME))
CREATE MEMORY TABLE PUBLIC.AE(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,AET VARCHAR(256) NOT NULL,HOSTNAME VARCHAR(256) NOT NULL,PORT INTEGER NOT NULL,CIPHER_SUITES VARCHAR(256),PAT_ID_ISSUER VARCHAR(256),ACC_NO_ISSUER VARCHAR(256),USER_ID VARCHAR(256),PASSWD VARCHAR(256),FS_GROUP_ID VARCHAR(256),AE_GROUP VARCHAR(256),AE_DESC VARCHAR(256),WADO_URL VARCHAR(256),STATION_NAME VARCHAR(256),INSTITUTION VARCHAR(256),DEPARTMENT VARCHAR(256),INSTALLED BIT(1) NOT NULL,VENDOR_DATA VARBINARY(5000))
ALTER TABLE PUBLIC.AE ALTER COLUMN PK RESTART WITH 2
CREATE UNIQUE INDEX AET ON PUBLIC.AE(AET)
CREATE INDEX HOSTNAME ON PUBLIC.AE(HOSTNAME)
CREATE INDEX AE_GROUP ON PUBLIC.AE(AE_GROUP)
CREATE MEMORY TABLE PUBLIC.CODE(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,CODE_VALUE VARCHAR(256) NOT NULL,CODE_DESIGNATOR VARCHAR(256) NOT NULL,CODE_VERSION VARCHAR(256),CODE_MEANING VARCHAR(256))
ALTER TABLE PUBLIC.CODE ALTER COLUMN PK RESTART WITH 0
CREATE UNIQUE INDEX CODE_VALUE ON PUBLIC.CODE(CODE_VALUE,CODE_DESIGNATOR,CODE_VERSION)
CREATE MEMORY TABLE PUBLIC.ISSUER(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,ENTITY_ID VARCHAR(256),ENTITY_UID VARCHAR(256),ENTITY_UID_TYPE VARCHAR(256))
ALTER TABLE PUBLIC.ISSUER ALTER COLUMN PK RESTART WITH 0
CREATE UNIQUE INDEX ENTITY_ID ON PUBLIC.ISSUER(ENTITY_ID)
CREATE UNIQUE INDEX ENTITY_UID ON PUBLIC.ISSUER(ENTITY_UID,ENTITY_UID_TYPE)
CREATE MEMORY TABLE PUBLIC.PATIENT(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,MERGE_FK BIGINT,PAT_ID VARCHAR(256),PAT_ID_ISSUER VARCHAR(256),PAT_NAME VARCHAR(256),PAT_FN_SX VARCHAR(256),PAT_GN_SX VARCHAR(256),PAT_I_NAME VARCHAR(256),PAT_P_NAME VARCHAR(256),PAT_BIRTHDATE VARCHAR(256),PAT_SEX VARCHAR(256),PAT_CUSTOM1 VARCHAR(256),PAT_CUSTOM2 VARCHAR(256),PAT_CUSTOM3 VARCHAR(256),CREATED_TIME TIMESTAMP,UPDATED_TIME TIMESTAMP,PAT_ATTRS VARBINARY(5000),FOREIGN KEY(MERGE_FK) REFERENCES PUBLIC.PATIENT(PK))
ALTER TABLE PUBLIC.PATIENT ALTER COLUMN PK RESTART WITH 0
CREATE INDEX PAT_MERGE_FK ON PUBLIC.PATIENT(MERGE_FK)
CREATE INDEX PAT_ID ON PUBLIC.PATIENT(PAT_ID,PAT_ID_ISSUER)
CREATE INDEX PAT_NAME ON PUBLIC.PATIENT(PAT_NAME)
CREATE INDEX PAT_FN_SX ON PUBLIC.PATIENT(PAT_FN_SX)
CREATE INDEX PAT_GN_SX ON PUBLIC.PATIENT(PAT_GN_SX)
CREATE INDEX PAT_I_NAME ON PUBLIC.PATIENT(PAT_I_NAME)
CREATE INDEX PAT_P_NAME ON PUBLIC.PATIENT(PAT_P_NAME)
CREATE INDEX PAT_BIRTHDATE ON PUBLIC.PATIENT(PAT_BIRTHDATE)
CREATE INDEX PAT_SEX ON PUBLIC.PATIENT(PAT_SEX)
CREATE INDEX PAT_CUSTOM1 ON PUBLIC.PATIENT(PAT_CUSTOM1)
CREATE INDEX PAT_CUSTOM2 ON PUBLIC.PATIENT(PAT_CUSTOM2)
CREATE INDEX PAT_CUSTOM3 ON PUBLIC.PATIENT(PAT_CUSTOM3)
CREATE MEMORY TABLE PUBLIC.OTHER_PID(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,PAT_ID VARCHAR(256) NOT NULL,PAT_ID_ISSUER VARCHAR(256) NOT NULL)
ALTER TABLE PUBLIC.OTHER_PID ALTER COLUMN PK RESTART WITH 0
CREATE UNIQUE INDEX OTHER_PAT_ID ON PUBLIC.OTHER_PID(PAT_ID,PAT_ID_ISSUER)
CREATE MEMORY TABLE PUBLIC.REL_PAT_OTHER_PID(PATIENT_FK BIGINT,OTHER_PID_FK BIGINT,FOREIGN KEY(PATIENT_FK) REFERENCES PUBLIC.PATIENT(PK),FOREIGN KEY(OTHER_PID_FK) REFERENCES PUBLIC.OTHER_PID(PK))
CREATE INDEX OTHER_PID_PAT_FK ON PUBLIC.REL_PAT_OTHER_PID(PATIENT_FK)
CREATE INDEX PAT_OTHER_PID_FK ON PUBLIC.REL_PAT_OTHER_PID(OTHER_PID_FK)
CREATE MEMORY TABLE PUBLIC.STUDY(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,PATIENT_FK BIGINT,ACCNO_ISSUER_FK BIGINT,STUDY_IUID VARCHAR(256) NOT NULL,STUDY_ID VARCHAR(256),STUDY_DATETIME TIMESTAMP,ACCESSION_NO VARCHAR(256),REF_PHYSICIAN VARCHAR(256),REF_PHYS_FN_SX VARCHAR(256),REF_PHYS_GN_SX VARCHAR(256),REF_PHYS_I_NAME VARCHAR(256),REF_PHYS_P_NAME VARCHAR(256),STUDY_DESC VARCHAR(256),STUDY_CUSTOM1 VARCHAR(256),STUDY_CUSTOM2 VARCHAR(256),STUDY_CUSTOM3 VARCHAR(256),STUDY_STATUS_ID VARCHAR(256),MODS_IN_STUDY VARCHAR(256),CUIDS_IN_STUDY VARCHAR(256),NUM_SERIES INTEGER NOT NULL,NUM_INSTANCES INTEGER NOT NULL,EXT_RETR_AET VARCHAR(256),RETRIEVE_AETS VARCHAR(256),FILESET_IUID VARCHAR(256),FILESET_ID VARCHAR(256),AVAILABILITY INTEGER NOT NULL,STUDY_STATUS INTEGER NOT NULL,CHECKED_TIME TIMESTAMP,CREATED_TIME TIMESTAMP,UPDATED_TIME TIMESTAMP,STUDY_ATTRS VARBINARY(5000),FOREIGN KEY(PATIENT_FK) REFERENCES PUBLIC.PATIENT(PK),FOREIGN KEY(ACCNO_ISSUER_FK) REFERENCES PUBLIC.ISSUER(PK))
ALTER TABLE PUBLIC.STUDY ALTER COLUMN PK RESTART WITH 0
CREATE INDEX PATIENT_FK ON PUBLIC.STUDY(PATIENT_FK)
CREATE INDEX ACCNO_ISSUER_FK ON PUBLIC.STUDY(ACCNO_ISSUER_FK)
CREATE UNIQUE INDEX STUDY_IUID ON PUBLIC.STUDY(STUDY_IUID)
CREATE INDEX STUDY_ID ON PUBLIC.STUDY(STUDY_ID)
CREATE INDEX STUDY_DATETIME ON PUBLIC.STUDY(STUDY_DATETIME)
CREATE INDEX ACCESSION_NO ON PUBLIC.STUDY(ACCESSION_NO)
CREATE INDEX REF_PHYSICIAN ON PUBLIC.STUDY(REF_PHYSICIAN)
CREATE INDEX REF_PHYS_FN_SX ON PUBLIC.STUDY(REF_PHYS_FN_SX)
CREATE INDEX REF_PHYS_GN_SX ON PUBLIC.STUDY(REF_PHYS_GN_SX)
CREATE INDEX REF_PHYS_I_NAME ON PUBLIC.STUDY(REF_PHYS_I_NAME)
CREATE INDEX REF_PHYS_P_NAME ON PUBLIC.STUDY(REF_PHYS_P_NAME)
CREATE INDEX STUDY_DESC ON PUBLIC.STUDY(STUDY_DESC)
CREATE INDEX STUDY_CUSTOM1 ON PUBLIC.STUDY(STUDY_CUSTOM1)
CREATE INDEX STUDY_CUSTOM2 ON PUBLIC.STUDY(STUDY_CUSTOM2)
CREATE INDEX STUDY_CUSTOM3 ON PUBLIC.STUDY(STUDY_CUSTOM3)
CREATE INDEX STUDY_STATUS_ID ON PUBLIC.STUDY(STUDY_STATUS_ID)
CREATE INDEX STUDY_CHECKED ON PUBLIC.STUDY(CHECKED_TIME)
CREATE INDEX STUDY_CREATED ON PUBLIC.STUDY(CREATED_TIME)
CREATE INDEX STUDY_UPDATED ON PUBLIC.STUDY(UPDATED_TIME)
CREATE INDEX STUDY_STATUS ON PUBLIC.STUDY(STUDY_STATUS)
CREATE MEMORY TABLE PUBLIC.REL_STUDY_PCODE(STUDY_FK BIGINT,PCODE_FK BIGINT,FOREIGN KEY(STUDY_FK) REFERENCES PUBLIC.STUDY(PK),FOREIGN KEY(PCODE_FK) REFERENCES PUBLIC.CODE(PK))
CREATE INDEX PCODE_STUDY_FK ON PUBLIC.REL_STUDY_PCODE(STUDY_FK)
CREATE INDEX STUDY_PCODE_FK ON PUBLIC.REL_STUDY_PCODE(PCODE_FK)
CREATE MEMORY TABLE PUBLIC.STUDY_PERMISSION(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,STUDY_IUID VARCHAR(256) NOT NULL,ACTION VARCHAR(256) NOT NULL,ROLES VARCHAR(256) NOT NULL)
ALTER TABLE PUBLIC.STUDY_PERMISSION ALTER COLUMN PK RESTART WITH 0
CREATE UNIQUE INDEX STUDY_PERM_IDX ON PUBLIC.STUDY_PERMISSION(STUDY_IUID,ACTION,ROLES)
CREATE MEMORY TABLE PUBLIC.MPPS(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,PATIENT_FK BIGINT,DRCODE_FK BIGINT,MPPS_IUID VARCHAR(256) NOT NULL,PPS_START TIMESTAMP,STATION_AET VARCHAR(256),MODALITY VARCHAR(256),ACCESSION_NO VARCHAR(256),MPPS_STATUS INTEGER NOT NULL,CREATED_TIME TIMESTAMP,UPDATED_TIME TIMESTAMP,MPPS_ATTRS VARBINARY(5000),FOREIGN KEY(PATIENT_FK) REFERENCES PUBLIC.PATIENT(PK),FOREIGN KEY(DRCODE_FK) REFERENCES PUBLIC.CODE(PK))
ALTER TABLE PUBLIC.MPPS ALTER COLUMN PK RESTART WITH 0
CREATE UNIQUE INDEX MPPS_IUID ON PUBLIC.MPPS(MPPS_IUID)
CREATE INDEX MPPS_PATIENT_FK ON PUBLIC.MPPS(PATIENT_FK)
CREATE INDEX MPPS_DRCODE_FK ON PUBLIC.MPPS(DRCODE_FK)
CREATE INDEX MPPS_PPS_START ON PUBLIC.MPPS(PPS_START)
CREATE INDEX MPPS_STATION_AET ON PUBLIC.MPPS(STATION_AET)
CREATE INDEX MPPS_MODALITY ON PUBLIC.MPPS(MODALITY)
CREATE INDEX MPPS_ACCESSION_NO ON PUBLIC.MPPS(ACCESSION_NO)
CREATE MEMORY TABLE PUBLIC.SERIES(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,STUDY_FK BIGINT,MPPS_FK BIGINT,INST_CODE_FK BIGINT,SERIES_IUID VARCHAR(256) NOT NULL,SERIES_NO VARCHAR(256),MODALITY VARCHAR(256),BODY_PART VARCHAR(256),LATERALITY VARCHAR(256),SERIES_DESC VARCHAR(256),INSTITUTION VARCHAR(256),STATION_NAME VARCHAR(256),DEPARTMENT VARCHAR(256),PERF_PHYSICIAN VARCHAR(256),PERF_PHYS_FN_SX VARCHAR(256),PERF_PHYS_GN_SX VARCHAR(256),PERF_PHYS_I_NAME VARCHAR(256),PERF_PHYS_P_NAME VARCHAR(256),PPS_START TIMESTAMP,PPS_IUID VARCHAR(256),SERIES_CUSTOM1 VARCHAR(256),SERIES_CUSTOM2 VARCHAR(256),SERIES_CUSTOM3 VARCHAR(256),NUM_INSTANCES INTEGER NOT NULL,SRC_AET VARCHAR(256),EXT_RETR_AET VARCHAR(256),RETRIEVE_AETS VARCHAR(256),FILESET_IUID VARCHAR(256),FILESET_ID VARCHAR(256),AVAILABILITY INTEGER NOT NULL,SERIES_STATUS INTEGER NOT NULL,CREATED_TIME TIMESTAMP,UPDATED_TIME TIMESTAMP,SERIES_ATTRS VARBINARY(5000),FOREIGN KEY(STUDY_FK) REFERENCES PUBLIC.STUDY(PK),FOREIGN KEY(MPPS_FK) REFERENCES PUBLIC.MPPS(PK),FOREIGN KEY(INST_CODE_FK) REFERENCES PUBLIC.CODE(PK))
ALTER TABLE PUBLIC.SERIES ALTER COLUMN PK RESTART WITH 0
CREATE INDEX STUDY_FK ON PUBLIC.SERIES(STUDY_FK)
CREATE INDEX SERIES_MPPS_FK ON PUBLIC.SERIES(MPPS_FK)
CREATE INDEX SERIES_INST_CODE_FK ON PUBLIC.SERIES(INST_CODE_FK)
CREATE UNIQUE INDEX SERIES_IUID ON PUBLIC.SERIES(SERIES_IUID)
CREATE INDEX SERIES_NO ON PUBLIC.SERIES(SERIES_NO)
CREATE INDEX MODALITY ON PUBLIC.SERIES(MODALITY)
CREATE INDEX BODY_PART ON PUBLIC.SERIES(BODY_PART)
CREATE INDEX LATERALITY ON PUBLIC.SERIES(LATERALITY)
CREATE INDEX SERIES_DESC ON PUBLIC.SERIES(SERIES_DESC)
CREATE INDEX INSTITUTION ON PUBLIC.SERIES(INSTITUTION)
CREATE INDEX STATION_NAME ON PUBLIC.SERIES(STATION_NAME)
CREATE INDEX DEPARTMENT ON PUBLIC.SERIES(DEPARTMENT)
CREATE INDEX PERF_PHYSICIAN ON PUBLIC.SERIES(PERF_PHYSICIAN)
CREATE INDEX PERF_PHYS_FN_SX ON PUBLIC.SERIES(PERF_PHYS_FN_SX)
CREATE INDEX PERF_PHYS_GN_SX ON PUBLIC.SERIES(PERF_PHYS_GN_SX)
CREATE INDEX PERF_PHYS_I_NAME ON PUBLIC.SERIES(PERF_PHYS_I_NAME)
CREATE INDEX PERF_PHYS_P_NAME ON PUBLIC.SERIES(PERF_PHYS_P_NAME)
CREATE INDEX SERIES_PPS_START ON PUBLIC.SERIES(PPS_START)
CREATE INDEX SERIES_PPS_IUID ON PUBLIC.SERIES(PPS_IUID)
CREATE INDEX SERIES_CUSTOM1 ON PUBLIC.SERIES(SERIES_CUSTOM1)
CREATE INDEX SERIES_CUSTOM2 ON PUBLIC.SERIES(SERIES_CUSTOM2)
CREATE INDEX SERIES_CUSTOM3 ON PUBLIC.SERIES(SERIES_CUSTOM3)
CREATE INDEX SERIES_SRC_AET ON PUBLIC.SERIES(SRC_AET)
CREATE INDEX SERIES_STATUS ON PUBLIC.SERIES(SERIES_STATUS)
CREATE INDEX SERIES_CREATED ON PUBLIC.SERIES(CREATED_TIME)
CREATE INDEX SERIES_UPDATED ON PUBLIC.SERIES(UPDATED_TIME)
CREATE MEMORY TABLE PUBLIC.SERIES_REQ(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,SERIES_FK BIGINT,ACCNO_ISSUER_FK BIGINT,ACCESSION_NO VARCHAR(256),STUDY_IUID VARCHAR(256),REQ_PROC_ID VARCHAR(256),SPS_ID VARCHAR(256),REQ_SERVICE VARCHAR(256),REQ_PHYSICIAN VARCHAR(256),REQ_PHYS_FN_SX VARCHAR(256),REQ_PHYS_GN_SX VARCHAR(256),REQ_PHYS_I_NAME VARCHAR(256),REQ_PHYS_P_NAME VARCHAR(256),FOREIGN KEY(SERIES_FK) REFERENCES PUBLIC.SERIES(PK),FOREIGN KEY(ACCNO_ISSUER_FK) REFERENCES PUBLIC.ISSUER(PK))
ALTER TABLE PUBLIC.SERIES_REQ ALTER COLUMN PK RESTART WITH 0
CREATE INDEX SER_REQ_SERIES_FK ON PUBLIC.SERIES_REQ(SERIES_FK)
CREATE INDEX SER_REQ_ACCNO_ISSUER_FK ON PUBLIC.SERIES_REQ(ACCNO_ISSUER_FK)
CREATE INDEX SER_REQ_ACCESSION_NO ON PUBLIC.SERIES_REQ(ACCESSION_NO)
CREATE INDEX SER_REQ_STUDY_IUID ON PUBLIC.SERIES_REQ(STUDY_IUID)
CREATE INDEX SER_REQ_PROC_ID ON PUBLIC.SERIES_REQ(REQ_PROC_ID)
CREATE INDEX SER_REQ_SPS_ID ON PUBLIC.SERIES_REQ(SPS_ID)
CREATE INDEX SER_REQ_SERVICE ON PUBLIC.SERIES_REQ(REQ_SERVICE)
CREATE INDEX SER_REQ_PHYS ON PUBLIC.SERIES_REQ(REQ_PHYSICIAN)
CREATE INDEX SER_REQ_PHYS_FN_SX ON PUBLIC.SERIES_REQ(REQ_PHYS_FN_SX)
CREATE INDEX SER_REQ_PHYS_GN_SX ON PUBLIC.SERIES_REQ(REQ_PHYS_GN_SX)
CREATE INDEX SER_REQ_PHYS_I ON PUBLIC.SERIES_REQ(REQ_PHYS_I_NAME)
CREATE INDEX SER_REQ_PHYS_P ON PUBLIC.SERIES_REQ(REQ_PHYS_P_NAME)
CREATE MEMORY TABLE PUBLIC.MEDIA(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,FILESET_IUID VARCHAR(256) NOT NULL,FILESET_ID VARCHAR(256),MEDIA_RQ_IUID VARCHAR(256),MEDIA_STATUS INTEGER NOT NULL,MEDIA_STATUS_INFO VARCHAR(256),MEDIA_USAGE BIGINT NOT NULL,CREATED_TIME TIMESTAMP,UPDATED_TIME TIMESTAMP)
ALTER TABLE PUBLIC.MEDIA ALTER COLUMN PK RESTART WITH 0
CREATE UNIQUE INDEX FILESET_IUID ON PUBLIC.MEDIA(FILESET_IUID)
CREATE INDEX MEDIA_STATUS ON PUBLIC.MEDIA(MEDIA_STATUS)
CREATE MEMORY TABLE PUBLIC.INSTANCE(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,SERIES_FK BIGINT,SRCODE_FK BIGINT,MEDIA_FK BIGINT,SOP_IUID VARCHAR(256) NOT NULL,SOP_CUID VARCHAR(256) NOT NULL,INST_NO VARCHAR(256),CONTENT_DATETIME TIMESTAMP,SR_COMPLETE VARCHAR(256),SR_VERIFIED VARCHAR(256),INST_CUSTOM1 VARCHAR(256),INST_CUSTOM2 VARCHAR(256),INST_CUSTOM3 VARCHAR(256),EXT_RETR_AET VARCHAR(256),RETRIEVE_AETS VARCHAR(256),AVAILABILITY INTEGER NOT NULL,INST_STATUS INTEGER NOT NULL,ALL_ATTRS BIT(1) NOT NULL,COMMITMENT BIT(1) NOT NULL,ARCHIVED BIT(1) NOT NULL,CREATED_TIME TIMESTAMP,UPDATED_TIME TIMESTAMP,INST_ATTRS VARBINARY(5000),FOREIGN KEY(SERIES_FK) REFERENCES PUBLIC.SERIES(PK),FOREIGN KEY(SRCODE_FK) REFERENCES PUBLIC.CODE(PK),FOREIGN KEY(MEDIA_FK) REFERENCES PUBLIC.MEDIA(PK))
ALTER TABLE PUBLIC.INSTANCE ALTER COLUMN PK RESTART WITH 0
CREATE INDEX SERIES_FK ON PUBLIC.INSTANCE(SERIES_FK)
CREATE INDEX SRCODE_FK ON PUBLIC.INSTANCE(SRCODE_FK)
CREATE INDEX MEDIA_FK ON PUBLIC.INSTANCE(MEDIA_FK)
CREATE UNIQUE INDEX SOP_IUID ON PUBLIC.INSTANCE(SOP_IUID)
CREATE INDEX SOP_CUID ON PUBLIC.INSTANCE(SOP_CUID)
CREATE INDEX INST_NO ON PUBLIC.INSTANCE(INST_NO)
CREATE INDEX CONTENT_DATETIME ON PUBLIC.INSTANCE(CONTENT_DATETIME)
CREATE INDEX SR_COMPLETE ON PUBLIC.INSTANCE(SR_COMPLETE)
CREATE INDEX SR_VERIFIED ON PUBLIC.INSTANCE(SR_VERIFIED)
CREATE INDEX INST_CUSTOM1 ON PUBLIC.INSTANCE(INST_CUSTOM1)
CREATE INDEX INST_CUSTOM2 ON PUBLIC.INSTANCE(INST_CUSTOM2)
CREATE INDEX INST_CUSTOM3 ON PUBLIC.INSTANCE(INST_CUSTOM3)
CREATE INDEX EXT_RETR_AET ON PUBLIC.INSTANCE(EXT_RETR_AET)
CREATE INDEX INST_STATUS ON PUBLIC.INSTANCE(INST_STATUS)
CREATE INDEX COMMITMENT ON PUBLIC.INSTANCE(COMMITMENT)
CREATE INDEX INST_CREATED ON PUBLIC.INSTANCE(CREATED_TIME)
CREATE INDEX INST_ARCHIVED ON PUBLIC.INSTANCE(ARCHIVED)
CREATE MEMORY TABLE PUBLIC.VERIFY_OBSERVER(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,INSTANCE_FK BIGINT,VERIFY_DATETIME TIMESTAMP,OBSERVER_NAME VARCHAR(256),OBSERVER_FN_SX VARCHAR(256),OBSERVER_GN_SX VARCHAR(256),OBSERVER_I_NAME VARCHAR(256),OBSERVER_P_NAME VARCHAR(256),FOREIGN KEY(INSTANCE_FK) REFERENCES PUBLIC.INSTANCE(PK))
ALTER TABLE PUBLIC.VERIFY_OBSERVER ALTER COLUMN PK RESTART WITH 0
CREATE INDEX OBSERVER_INST_FK ON PUBLIC.VERIFY_OBSERVER(INSTANCE_FK)
CREATE INDEX VERIFY_DATETIME ON PUBLIC.VERIFY_OBSERVER(VERIFY_DATETIME)
CREATE INDEX OBSERVER_NAME ON PUBLIC.VERIFY_OBSERVER(OBSERVER_NAME)
CREATE INDEX OBSERVER_FN_SX ON PUBLIC.VERIFY_OBSERVER(OBSERVER_FN_SX)
CREATE INDEX OBSERVER_GN_SX ON PUBLIC.VERIFY_OBSERVER(OBSERVER_GN_SX)
CREATE INDEX OBSERVER_I_NAME ON PUBLIC.VERIFY_OBSERVER(OBSERVER_I_NAME)
CREATE INDEX OBSERVER_P_NAME ON PUBLIC.VERIFY_OBSERVER(OBSERVER_P_NAME)
CREATE MEMORY TABLE PUBLIC.CONTENT_ITEM(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,INSTANCE_FK BIGINT,NAME_FK BIGINT,CODE_FK BIGINT,REL_TYPE VARCHAR(256),TEXT_VALUE VARCHAR(256),FOREIGN KEY(INSTANCE_FK) REFERENCES PUBLIC.INSTANCE(PK),FOREIGN KEY(NAME_FK) REFERENCES PUBLIC.CODE(PK),FOREIGN KEY(CODE_FK) REFERENCES PUBLIC.CODE(PK))
ALTER TABLE PUBLIC.CONTENT_ITEM ALTER COLUMN PK RESTART WITH 0
CREATE INDEX CONTENT_ITEM_INST_FK ON PUBLIC.CONTENT_ITEM(INSTANCE_FK)
CREATE INDEX CONTENT_ITEM_NAME_FK ON PUBLIC.CONTENT_ITEM(NAME_FK)
CREATE INDEX CONTENT_ITEM_CODE_FK ON PUBLIC.CONTENT_ITEM(CODE_FK)
CREATE INDEX CONTENT_ITEM_REL_TYPE ON PUBLIC.CONTENT_ITEM(REL_TYPE)
CREATE INDEX CONTENT_ITEM_TEXT_VALUE ON PUBLIC.CONTENT_ITEM(TEXT_VALUE)
CREATE MEMORY TABLE PUBLIC.FILESYSTEM(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,NEXT_FK BIGINT,DIRPATH VARCHAR(256) NOT NULL,FS_GROUP_ID VARCHAR(256) NOT NULL,RETRIEVE_AET VARCHAR(256) NOT NULL,AVAILABILITY INTEGER NOT NULL,FS_STATUS INTEGER NOT NULL,USER_INFO VARCHAR(256),FOREIGN KEY(NEXT_FK) REFERENCES PUBLIC.FILESYSTEM(PK))
ALTER TABLE PUBLIC.FILESYSTEM ALTER COLUMN PK RESTART WITH 0
CREATE UNIQUE INDEX FS_DIRPATH ON PUBLIC.FILESYSTEM(DIRPATH)
CREATE INDEX FS_NEXT_FK ON PUBLIC.FILESYSTEM(NEXT_FK)
CREATE INDEX FS_GROUP_ID ON PUBLIC.FILESYSTEM(FS_GROUP_ID)
CREATE INDEX FS_RETRIEVE_AET ON PUBLIC.FILESYSTEM(RETRIEVE_AET)
CREATE INDEX FS_AVAILABILITY ON PUBLIC.FILESYSTEM(AVAILABILITY)
CREATE INDEX FS_STATUS ON PUBLIC.FILESYSTEM(FS_STATUS)
CREATE MEMORY TABLE PUBLIC.FILES(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,INSTANCE_FK BIGINT,FILESYSTEM_FK BIGINT,FILEPATH VARCHAR(256) NOT NULL,FILE_TSUID VARCHAR(256) NOT NULL,FILE_MD5 VARCHAR(256),FILE_SIZE BIGINT,FILE_STATUS INTEGER,MD5_CHECK_TIME TIMESTAMP,CREATED_TIME TIMESTAMP,FOREIGN KEY(INSTANCE_FK) REFERENCES PUBLIC.INSTANCE(PK),FOREIGN KEY(FILESYSTEM_FK) REFERENCES PUBLIC.FILESYSTEM(PK))
ALTER TABLE PUBLIC.FILES ALTER COLUMN PK RESTART WITH 0
CREATE INDEX INSTANCE_FK ON PUBLIC.FILES(INSTANCE_FK)
CREATE INDEX FILESYSTEM_FK ON PUBLIC.FILES(FILESYSTEM_FK)
CREATE INDEX FILE_TSUID ON PUBLIC.FILES(FILE_TSUID)
CREATE INDEX MD5_CHECK_TIME ON PUBLIC.FILES(MD5_CHECK_TIME)
CREATE INDEX FILE_CREATED ON PUBLIC.FILES(CREATED_TIME)
CREATE INDEX FILE_STATUS ON PUBLIC.FILES(FILE_STATUS)
CREATE INDEX FILEPATH ON PUBLIC.FILES(FILEPATH)
CREATE MEMORY TABLE PUBLIC.STUDY_ON_FS(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,STUDY_FK BIGINT,FILESYSTEM_FK BIGINT,ACCESS_TIME TIMESTAMP NOT NULL,MARK_TO_DELETE BIT(1) NOT NULL,FOREIGN KEY(STUDY_FK) REFERENCES PUBLIC.STUDY(PK),FOREIGN KEY(FILESYSTEM_FK) REFERENCES PUBLIC.FILESYSTEM(PK))
ALTER TABLE PUBLIC.STUDY_ON_FS ALTER COLUMN PK RESTART WITH 0
CREATE UNIQUE INDEX I_STUDY_ON_FS ON PUBLIC.STUDY_ON_FS(STUDY_FK,FILESYSTEM_FK)
CREATE INDEX FS_OF_STUDY ON PUBLIC.STUDY_ON_FS(FILESYSTEM_FK)
CREATE INDEX ACCESS_TIME ON PUBLIC.STUDY_ON_FS(ACCESS_TIME)
CREATE INDEX MARK_TO_DELETE ON PUBLIC.STUDY_ON_FS(MARK_TO_DELETE)
CREATE MEMORY TABLE PUBLIC.MWL_ITEM(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,PATIENT_FK BIGINT,SPS_STATUS INTEGER,SPS_ID VARCHAR(256),START_DATETIME TIMESTAMP NOT NULL,STATION_AET VARCHAR(256) NOT NULL,STATION_NAME VARCHAR(256),MODALITY VARCHAR(256) NOT NULL,PERF_PHYSICIAN VARCHAR(256),PERF_PHYS_FN_SX VARCHAR(256),PERF_PHYS_GN_SX VARCHAR(256),PERF_PHYS_I_NAME VARCHAR(256),PERF_PHYS_P_NAME VARCHAR(256),REQ_PROC_ID VARCHAR(256) NOT NULL,ACCESSION_NO VARCHAR(256),STUDY_IUID VARCHAR(256) NOT NULL,CREATED_TIME TIMESTAMP,UPDATED_TIME TIMESTAMP,ITEM_ATTRS VARBINARY(5000),FOREIGN KEY(PATIENT_FK) REFERENCES PUBLIC.PATIENT(PK))
ALTER TABLE PUBLIC.MWL_ITEM ALTER COLUMN PK RESTART WITH 0
CREATE INDEX MWL_PATIENT_FK ON PUBLIC.MWL_ITEM(PATIENT_FK)
CREATE INDEX SPS_STATUS ON PUBLIC.MWL_ITEM(SPS_STATUS)
CREATE UNIQUE INDEX MWL_SPS_ID ON PUBLIC.MWL_ITEM(SPS_ID,REQ_PROC_ID)
CREATE INDEX MWL_START_TIME ON PUBLIC.MWL_ITEM(START_DATETIME)
CREATE INDEX MWL_STATION_AET ON PUBLIC.MWL_ITEM(STATION_AET)
CREATE INDEX MWL_STATION_NAME ON PUBLIC.MWL_ITEM(STATION_NAME)
CREATE INDEX MWL_MODALITY ON PUBLIC.MWL_ITEM(MODALITY)
CREATE INDEX MWL_PERF_PHYSICIAN ON PUBLIC.MWL_ITEM(PERF_PHYSICIAN)
CREATE INDEX MWL_PERF_PHYS_FN_SX ON PUBLIC.MWL_ITEM(PERF_PHYS_FN_SX)
CREATE INDEX MWL_PERF_PHYS_GN_SX ON PUBLIC.MWL_ITEM(PERF_PHYS_GN_SX)
CREATE INDEX MWL_PERF_PHYS_I_NM ON PUBLIC.MWL_ITEM(PERF_PHYS_I_NAME)
CREATE INDEX MWL_PERF_PHYS_P_NM ON PUBLIC.MWL_ITEM(PERF_PHYS_P_NAME)
CREATE INDEX MWL_REQ_PROC_ID ON PUBLIC.MWL_ITEM(REQ_PROC_ID)
CREATE INDEX MWL_ACCESSION_NO ON PUBLIC.MWL_ITEM(ACCESSION_NO)
CREATE INDEX MWL_STUDY_IUID ON PUBLIC.MWL_ITEM(STUDY_IUID)
CREATE MEMORY TABLE PUBLIC.GPSPS(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,PATIENT_FK BIGINT,CODE_FK BIGINT,GPSPS_IUID VARCHAR(256) NOT NULL,GPSPS_TUID VARCHAR(256),START_DATETIME TIMESTAMP NOT NULL,END_DATETIME TIMESTAMP,GPSPS_STATUS INTEGER,GPSPS_PRIOR INTEGER,IN_AVAILABILITY INTEGER,ITEM_ATTRS VARBINARY(5000),FOREIGN KEY(PATIENT_FK) REFERENCES PUBLIC.PATIENT(PK),FOREIGN KEY(CODE_FK) REFERENCES PUBLIC.CODE(PK))
ALTER TABLE PUBLIC.GPSPS ALTER COLUMN PK RESTART WITH 0
CREATE INDEX GPSPS_PATIENT_FK ON PUBLIC.GPSPS(PATIENT_FK)
CREATE INDEX GPSPS_CODE_FK ON PUBLIC.GPSPS(CODE_FK)
CREATE UNIQUE INDEX GPSPS_IUID ON PUBLIC.GPSPS(GPSPS_IUID)
CREATE INDEX GPSPS_TUID ON PUBLIC.GPSPS(GPSPS_TUID)
CREATE INDEX GPSPS_START_TIME ON PUBLIC.GPSPS(START_DATETIME)
CREATE INDEX GPSPS_END_TIME ON PUBLIC.GPSPS(END_DATETIME)
CREATE INDEX GPSPS_STATUS ON PUBLIC.GPSPS(GPSPS_STATUS)
CREATE INDEX GPSPS_PRIOR ON PUBLIC.GPSPS(GPSPS_PRIOR)
CREATE INDEX IN_AVAILABILITY ON PUBLIC.GPSPS(IN_AVAILABILITY)
CREATE MEMORY TABLE PUBLIC.REL_GPSPS_APPCODE(GPSPS_FK BIGINT,APPCODE_FK BIGINT,FOREIGN KEY(GPSPS_FK) REFERENCES PUBLIC.GPSPS(PK),FOREIGN KEY(APPCODE_FK) REFERENCES PUBLIC.CODE(PK))
CREATE INDEX APPCODE_GPSPS_FK ON PUBLIC.REL_GPSPS_APPCODE(GPSPS_FK)
CREATE INDEX GPSPS_APPCODE_FK ON PUBLIC.REL_GPSPS_APPCODE(APPCODE_FK)
CREATE MEMORY TABLE PUBLIC.REL_GPSPS_DEVNAME(GPSPS_FK BIGINT,DEVNAME_FK BIGINT,FOREIGN KEY(GPSPS_FK) REFERENCES PUBLIC.GPSPS(PK),FOREIGN KEY(DEVNAME_FK) REFERENCES PUBLIC.CODE(PK))
CREATE INDEX DEVNAME_GPSPS_FK ON PUBLIC.REL_GPSPS_DEVNAME(GPSPS_FK)
CREATE INDEX GPSPS_DEVNAME_FK ON PUBLIC.REL_GPSPS_DEVNAME(DEVNAME_FK)
CREATE MEMORY TABLE PUBLIC.REL_GPSPS_DEVCLASS(GPSPS_FK BIGINT,DEVCLASS_FK BIGINT,FOREIGN KEY(GPSPS_FK) REFERENCES PUBLIC.GPSPS(PK),FOREIGN KEY(DEVCLASS_FK) REFERENCES PUBLIC.CODE(PK))
CREATE INDEX DEVCLASS_GPSPS_FK ON PUBLIC.REL_GPSPS_DEVCLASS(GPSPS_FK)
CREATE INDEX GPSPS_DEVCLASS_FK ON PUBLIC.REL_GPSPS_DEVCLASS(DEVCLASS_FK)
CREATE MEMORY TABLE PUBLIC.REL_GPSPS_DEVLOC(GPSPS_FK BIGINT,DEVLOC_FK BIGINT,FOREIGN KEY(GPSPS_FK) REFERENCES PUBLIC.GPSPS(PK),FOREIGN KEY(DEVLOC_FK) REFERENCES PUBLIC.CODE(PK))
CREATE INDEX DEVLOC_GPSPS_FK ON PUBLIC.REL_GPSPS_DEVLOC(GPSPS_FK)
CREATE INDEX GPSPS_DEVLOC_FK ON PUBLIC.REL_GPSPS_DEVLOC(DEVLOC_FK)
CREATE MEMORY TABLE PUBLIC.GPSPS_PERF(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,GPSPS_FK BIGINT,CODE_FK BIGINT,HUMAN_PERF_NAME VARCHAR(256),HUM_PERF_FN_SX VARCHAR(256),HUM_PERF_GN_SX VARCHAR(256),HUM_PERF_I_NAME VARCHAR(256),HUM_PERF_P_NAME VARCHAR(256),FOREIGN KEY(GPSPS_FK) REFERENCES PUBLIC.GPSPS(PK),FOREIGN KEY(CODE_FK) REFERENCES PUBLIC.CODE(PK))
ALTER TABLE PUBLIC.GPSPS_PERF ALTER COLUMN PK RESTART WITH 0
CREATE INDEX GPSPS_PERF_SPS_FK ON PUBLIC.GPSPS_PERF(GPSPS_FK)
CREATE INDEX GPSPS_PERF_CODE_FK ON PUBLIC.GPSPS_PERF(CODE_FK)
CREATE INDEX GPSPS_PERF_NAME ON PUBLIC.GPSPS_PERF(HUMAN_PERF_NAME)
CREATE INDEX GPSPS_PERF_FN_SX ON PUBLIC.GPSPS_PERF(HUM_PERF_FN_SX)
CREATE INDEX GPSPS_PERF_GN_SX ON PUBLIC.GPSPS_PERF(HUM_PERF_GN_SX)
CREATE INDEX GPSPS_PERF_I_NAME ON PUBLIC.GPSPS_PERF(HUM_PERF_I_NAME)
CREATE INDEX GPSPS_PERF_P_NAME ON PUBLIC.GPSPS_PERF(HUM_PERF_P_NAME)
CREATE MEMORY TABLE PUBLIC.GPSPS_REQ(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,GPSPS_FK BIGINT,REQ_PROC_ID VARCHAR(256),ACCESSION_NO VARCHAR(256),FOREIGN KEY(GPSPS_FK) REFERENCES PUBLIC.GPSPS(PK))
ALTER TABLE PUBLIC.GPSPS_REQ ALTER COLUMN PK RESTART WITH 0
CREATE INDEX GPSPS_REQ_GPSPS_FK ON PUBLIC.GPSPS_REQ(GPSPS_FK)
CREATE INDEX GPSPS_REQ_PROC_ID ON PUBLIC.GPSPS_REQ(REQ_PROC_ID)
CREATE INDEX GPSPS_REQ_ACC_NO ON PUBLIC.GPSPS_REQ(ACCESSION_NO)
CREATE MEMORY TABLE PUBLIC.GPPPS(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,PATIENT_FK BIGINT,PPS_IUID VARCHAR(256) NOT NULL,PPS_START TIMESTAMP,PPS_STATUS INTEGER NOT NULL,CREATED_TIME TIMESTAMP,UPDATED_TIME TIMESTAMP,PPS_ATTRS VARBINARY(5000),FOREIGN KEY(PATIENT_FK) REFERENCES PUBLIC.PATIENT(PK))
ALTER TABLE PUBLIC.GPPPS ALTER COLUMN PK RESTART WITH 0
CREATE UNIQUE INDEX GPPPS_IUID ON PUBLIC.GPPPS(PPS_IUID)
CREATE INDEX GPPPS_PATIENT_FK ON PUBLIC.GPPPS(PATIENT_FK)
CREATE INDEX GPPPS_PPS_START ON PUBLIC.GPPPS(PPS_START)
CREATE MEMORY TABLE PUBLIC.REL_GPSPS_GPPPS(GPSPS_FK BIGINT,GPPPS_FK BIGINT,FOREIGN KEY(GPSPS_FK) REFERENCES PUBLIC.GPSPS(PK),FOREIGN KEY(GPPPS_FK) REFERENCES PUBLIC.GPPPS(PK))
CREATE INDEX GPPPS_GPSPS_FK ON PUBLIC.REL_GPSPS_GPPPS(GPSPS_FK)
CREATE INDEX GPSPS_GPPPS_FK ON PUBLIC.REL_GPSPS_GPPPS(GPPPS_FK)
CREATE MEMORY TABLE PUBLIC.UPS(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,PATIENT_FK BIGINT,CODE_FK BIGINT,UPS_IUID VARCHAR(256) NOT NULL,UPS_TUID VARCHAR(256),ADM_ID VARCHAR(256),ADM_ID_ISSUER_ID VARCHAR(256),ADM_ID_ISSUER_UID VARCHAR(256),UPS_LABEL VARCHAR(256) NOT NULL,UWL_LABEL VARCHAR(256) NOT NULL,UPS_START_TIME TIMESTAMP NOT NULL,UPS_COMPL_TIME TIMESTAMP,UPS_STATE INTEGER,UPS_PRIOR INTEGER,CREATED_TIME TIMESTAMP,UPDATED_TIME TIMESTAMP,UPS_ATTRS VARBINARY(5000),FOREIGN KEY(PATIENT_FK) REFERENCES PUBLIC.PATIENT(PK))
ALTER TABLE PUBLIC.UPS ALTER COLUMN PK RESTART WITH 0
CREATE INDEX UPS_PATIENT_FK ON PUBLIC.UPS(PATIENT_FK)
CREATE INDEX UPS_CODE_FK ON PUBLIC.UPS(CODE_FK)
CREATE UNIQUE INDEX UPS_IUID ON PUBLIC.UPS(UPS_IUID)
CREATE INDEX UPS_TUID ON PUBLIC.UPS(UPS_TUID)
CREATE INDEX UPS_ADM_ID ON PUBLIC.UPS(ADM_ID)
CREATE INDEX UPS_ADM_ID_ISSUER_ID ON PUBLIC.UPS(ADM_ID_ISSUER_ID)
CREATE INDEX UPS_ADM_ID_ISSUER_UID ON PUBLIC.UPS(ADM_ID_ISSUER_UID)
CREATE INDEX UPS_LABEL ON PUBLIC.UPS(UPS_LABEL)
CREATE INDEX UWL_LABEL ON PUBLIC.UPS(UWL_LABEL)
CREATE INDEX UPS_START_TIME ON PUBLIC.UPS(UPS_START_TIME)
CREATE INDEX UPS_COMPL_TIME ON PUBLIC.UPS(UPS_COMPL_TIME)
CREATE INDEX UPS_STATE ON PUBLIC.UPS(UPS_STATE)
CREATE INDEX UPS_PRIOR ON PUBLIC.UPS(UPS_PRIOR)
CREATE INDEX UPS_UPDATED_TIME ON PUBLIC.UPS(UPDATED_TIME)
CREATE MEMORY TABLE PUBLIC.REL_UPS_APPCODE(UPS_FK BIGINT,APPCODE_FK BIGINT,FOREIGN KEY(UPS_FK) REFERENCES PUBLIC.UPS(PK),FOREIGN KEY(APPCODE_FK) REFERENCES PUBLIC.CODE(PK))
CREATE INDEX APPCODE_UPS_FK ON PUBLIC.REL_UPS_APPCODE(UPS_FK)
CREATE INDEX UPS_APPCODE_FK ON PUBLIC.REL_UPS_APPCODE(APPCODE_FK)
CREATE MEMORY TABLE PUBLIC.REL_UPS_DEVNAME(UPS_FK BIGINT,DEVNAME_FK BIGINT,FOREIGN KEY(UPS_FK) REFERENCES PUBLIC.UPS(PK),FOREIGN KEY(DEVNAME_FK) REFERENCES PUBLIC.CODE(PK))
CREATE INDEX DEVNAME_UPS_FK ON PUBLIC.REL_UPS_DEVNAME(UPS_FK)
CREATE INDEX UPS_DEVNAME_FK ON PUBLIC.REL_UPS_DEVNAME(DEVNAME_FK)
CREATE MEMORY TABLE PUBLIC.REL_UPS_DEVCLASS(UPS_FK BIGINT,DEVCLASS_FK BIGINT,FOREIGN KEY(UPS_FK) REFERENCES PUBLIC.UPS(PK),FOREIGN KEY(DEVCLASS_FK) REFERENCES PUBLIC.CODE(PK))
CREATE INDEX DEVCLASS_UPS_FK ON PUBLIC.REL_UPS_DEVCLASS(UPS_FK)
CREATE INDEX UPS_DEVCLASS_FK ON PUBLIC.REL_UPS_DEVCLASS(DEVCLASS_FK)
CREATE MEMORY TABLE PUBLIC.REL_UPS_DEVLOC(UPS_FK BIGINT,DEVLOC_FK BIGINT,FOREIGN KEY(UPS_FK) REFERENCES PUBLIC.UPS(PK),FOREIGN KEY(DEVLOC_FK) REFERENCES PUBLIC.CODE(PK))
CREATE INDEX DEVLOC_UPS_FK ON PUBLIC.REL_UPS_DEVLOC(UPS_FK)
CREATE INDEX UPS_DEVLOC_FK ON PUBLIC.REL_UPS_DEVLOC(DEVLOC_FK)
CREATE MEMORY TABLE PUBLIC.REL_UPS_PERFORMER(UPS_FK BIGINT,PERFORMER_FK BIGINT,FOREIGN KEY(UPS_FK) REFERENCES PUBLIC.UPS(PK),FOREIGN KEY(PERFORMER_FK) REFERENCES PUBLIC.CODE(PK))
CREATE INDEX PERFORMER_UPS_FK ON PUBLIC.REL_UPS_PERFORMER(UPS_FK)
CREATE INDEX UPS_PERFORMER_FK ON PUBLIC.REL_UPS_PERFORMER(PERFORMER_FK)
CREATE MEMORY TABLE PUBLIC.UPS_REQ(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,UPS_FK BIGINT,REQ_PROC_ID VARCHAR(256),ACCESSION_NO VARCHAR(256),CONFIDENTIALITY VARCHAR(256),REQ_SERVICE VARCHAR(256),FOREIGN KEY(UPS_FK) REFERENCES PUBLIC.UPS(PK))
ALTER TABLE PUBLIC.UPS_REQ ALTER COLUMN PK RESTART WITH 0
CREATE INDEX UPS_REQ_UPS_FK ON PUBLIC.UPS_REQ(UPS_FK)
CREATE INDEX UPS_REQ_PROC_ID ON PUBLIC.UPS_REQ(REQ_PROC_ID)
CREATE INDEX UPS_REQ_ACC_NO ON PUBLIC.UPS_REQ(ACCESSION_NO)
CREATE INDEX UPS_CONFIDENTIALITY ON PUBLIC.UPS_REQ(CONFIDENTIALITY)
CREATE INDEX UPS_REQ_SERVICE ON PUBLIC.UPS_REQ(REQ_SERVICE)
CREATE MEMORY TABLE PUBLIC.UPS_REL_PS(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,UPS_FK BIGINT,SOP_IUID VARCHAR(256) NOT NULL,SOP_CUID VARCHAR(256) NOT NULL,FOREIGN KEY(UPS_FK) REFERENCES PUBLIC.UPS(PK))
ALTER TABLE PUBLIC.UPS_REL_PS ALTER COLUMN PK RESTART WITH 0
CREATE INDEX UPS_REL_PS_UPS_FK ON PUBLIC.UPS_REL_PS(UPS_FK)
CREATE INDEX UPS_REL_PS_IUID ON PUBLIC.UPS_REL_PS(SOP_IUID)
CREATE INDEX UPS_REL_PS_CUID ON PUBLIC.UPS_REL_PS(SOP_CUID)
CREATE MEMORY TABLE PUBLIC.UPS_REPL_PS(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,UPS_FK BIGINT,SOP_IUID VARCHAR(256) NOT NULL,SOP_CUID VARCHAR(256) NOT NULL,FOREIGN KEY(UPS_FK) REFERENCES PUBLIC.UPS(PK))
ALTER TABLE PUBLIC.UPS_REPL_PS ALTER COLUMN PK RESTART WITH 0
CREATE INDEX UPS_REPL_PS_UPS_FK ON PUBLIC.UPS_REPL_PS(UPS_FK)
CREATE INDEX UPS_REPL_PS_IUID ON PUBLIC.UPS_REPL_PS(SOP_IUID)
CREATE INDEX UPS_REPL_PS_CUID ON PUBLIC.UPS_REPL_PS(SOP_CUID)
CREATE MEMORY TABLE PUBLIC.UPS_SUBSCR(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,UPS_FK BIGINT,AET VARCHAR(256) NOT NULL,DELETION_LOCK BIT(1) NOT NULL,FOREIGN KEY(UPS_FK) REFERENCES PUBLIC.UPS(PK))
ALTER TABLE PUBLIC.UPS_SUBSCR ALTER COLUMN PK RESTART WITH 0
CREATE INDEX UPS_SUBSCR_UPS_FK ON PUBLIC.UPS_SUBSCR(UPS_FK)
CREATE INDEX UPS_DELETION_LOCK ON PUBLIC.UPS_SUBSCR(DELETION_LOCK)
CREATE INDEX UPS_SUBSCR_AET ON PUBLIC.UPS_SUBSCR(AET)
CREATE MEMORY TABLE PUBLIC.UPS_GLOB_SUBSCR(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,AET VARCHAR(256) NOT NULL,DELETION_LOCK BIT(1) NOT NULL)
ALTER TABLE PUBLIC.UPS_GLOB_SUBSCR ALTER COLUMN PK RESTART WITH 0
CREATE UNIQUE INDEX UPS_GLOB_SUBSCR_AET ON PUBLIC.UPS_GLOB_SUBSCR(AET)
CREATE MEMORY TABLE PUBLIC.HP(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,USER_FK BIGINT,HP_IUID VARCHAR(256) NOT NULL,HP_CUID VARCHAR(256),HP_NAME VARCHAR(256),HP_GROUP VARCHAR(256),HP_LEVEL INTEGER,NUM_PRIORS INTEGER,NUM_SCREENS INTEGER,HP_ATTRS VARBINARY(5000),FOREIGN KEY(USER_FK) REFERENCES PUBLIC.CODE(PK))
ALTER TABLE PUBLIC.HP ALTER COLUMN PK RESTART WITH 0
CREATE INDEX HP_USER_FK ON PUBLIC.HP(USER_FK)
CREATE UNIQUE INDEX HP_IUID ON PUBLIC.HP(HP_IUID)
CREATE INDEX HP_CUID ON PUBLIC.HP(HP_CUID)
CREATE INDEX HP_NAME ON PUBLIC.HP(HP_NAME)
CREATE INDEX HP_LEVEL ON PUBLIC.HP(HP_LEVEL)
CREATE INDEX NUM_SCREENS ON PUBLIC.HP(NUM_SCREENS)
CREATE MEMORY TABLE PUBLIC.HPDEF(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,HP_FK BIGINT,MODALITY VARCHAR(256),LATERALITY VARCHAR(256),FOREIGN KEY(HP_FK) REFERENCES PUBLIC.HP(PK))
ALTER TABLE PUBLIC.HPDEF ALTER COLUMN PK RESTART WITH 0
CREATE INDEX HP_FK ON PUBLIC.HPDEF(HP_FK)
CREATE INDEX HPDEF_MODALITY ON PUBLIC.HPDEF(MODALITY)
CREATE INDEX HPDEF_LATERALITY ON PUBLIC.HPDEF(LATERALITY)
CREATE MEMORY TABLE PUBLIC.REL_HPDEF_REGION(HPDEF_FK BIGINT,REGION_FK BIGINT,FOREIGN KEY(HPDEF_FK) REFERENCES PUBLIC.HPDEF(PK),FOREIGN KEY(REGION_FK) REFERENCES PUBLIC.CODE(PK))
CREATE INDEX REGION_HPDEF_FK ON PUBLIC.REL_HPDEF_REGION(HPDEF_FK)
CREATE INDEX HPDEF_REGION_FK ON PUBLIC.REL_HPDEF_REGION(REGION_FK)
CREATE MEMORY TABLE PUBLIC.REL_HPDEF_PROC(HPDEF_FK BIGINT,PROC_FK BIGINT,FOREIGN KEY(HPDEF_FK) REFERENCES PUBLIC.HPDEF(PK),FOREIGN KEY(PROC_FK) REFERENCES PUBLIC.CODE(PK))
CREATE INDEX PROC_HPDEF_FK ON PUBLIC.REL_HPDEF_PROC(HPDEF_FK)
CREATE INDEX HPDEF_PROC_FK ON PUBLIC.REL_HPDEF_PROC(PROC_FK)
CREATE MEMORY TABLE PUBLIC.REL_HPDEF_REASON(HPDEF_FK BIGINT,REASON_FK BIGINT,FOREIGN KEY(HPDEF_FK) REFERENCES PUBLIC.HPDEF(PK),FOREIGN KEY(REASON_FK) REFERENCES PUBLIC.CODE(PK))
CREATE INDEX REASON_HPDEF_FK ON PUBLIC.REL_HPDEF_REASON(HPDEF_FK)
CREATE INDEX HPDEF_REASON_FK ON PUBLIC.REL_HPDEF_REASON(REASON_FK)
CREATE MEMORY TABLE PUBLIC.PRIV_PATIENT(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,PRIV_TYPE INTEGER NOT NULL,PAT_ID VARCHAR(256),PAT_ID_ISSUER VARCHAR(256),PAT_NAME VARCHAR(256),PAT_ATTRS VARBINARY(5000))
ALTER TABLE PUBLIC.PRIV_PATIENT ALTER COLUMN PK RESTART WITH 0
CREATE INDEX PRIV_PAT_ID ON PUBLIC.PRIV_PATIENT(PAT_ID,PAT_ID_ISSUER)
CREATE INDEX PRIV_PAT_TYPE ON PUBLIC.PRIV_PATIENT(PRIV_TYPE)
CREATE INDEX PRIV_PATIENT_NAME ON PUBLIC.PRIV_PATIENT(PAT_NAME)
CREATE MEMORY TABLE PUBLIC.PRIV_STUDY(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,PATIENT_FK BIGINT,PRIV_TYPE INTEGER NOT NULL,STUDY_IUID VARCHAR(256) NOT NULL,ACCESSION_NO VARCHAR(256),STUDY_ATTRS VARBINARY(5000),FOREIGN KEY(PATIENT_FK) REFERENCES PUBLIC.PRIV_PATIENT(PK))
ALTER TABLE PUBLIC.PRIV_STUDY ALTER COLUMN PK RESTART WITH 0
CREATE INDEX PRIV_PATIENT_FK ON PUBLIC.PRIV_STUDY(PATIENT_FK)
CREATE INDEX PRIV_STUDY_TYPE ON PUBLIC.PRIV_STUDY(PRIV_TYPE)
CREATE INDEX PRIV_STUDY_IUID ON PUBLIC.PRIV_STUDY(STUDY_IUID)
CREATE INDEX PRIV_STUDY_ACCS_NO ON PUBLIC.PRIV_STUDY(ACCESSION_NO)
CREATE MEMORY TABLE PUBLIC.PRIV_SERIES(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,STUDY_FK BIGINT,PRIV_TYPE INTEGER NOT NULL,SERIES_IUID VARCHAR(256) NOT NULL,SRC_AET VARCHAR(256),SERIES_ATTRS VARBINARY(5000),FOREIGN KEY(STUDY_FK) REFERENCES PUBLIC.PRIV_STUDY(PK))
ALTER TABLE PUBLIC.PRIV_SERIES ALTER COLUMN PK RESTART WITH 0
CREATE INDEX PRIV_STUDY_FK ON PUBLIC.PRIV_SERIES(STUDY_FK)
CREATE INDEX PRIV_SERIES_TYPE ON PUBLIC.PRIV_SERIES(PRIV_TYPE)
CREATE INDEX PRIV_SERIES_IUID ON PUBLIC.PRIV_SERIES(SERIES_IUID)
CREATE INDEX PRIV_SER_SRC_AET ON PUBLIC.PRIV_SERIES(SRC_AET)
CREATE MEMORY TABLE PUBLIC.PRIV_INSTANCE(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,SERIES_FK BIGINT,PRIV_TYPE INTEGER NOT NULL,SOP_IUID VARCHAR(256) NOT NULL,CREATED_TIME TIMESTAMP,INST_ATTRS VARBINARY(5000),FOREIGN KEY(SERIES_FK) REFERENCES PUBLIC.PRIV_SERIES(PK))
ALTER TABLE PUBLIC.PRIV_INSTANCE ALTER COLUMN PK RESTART WITH 0
CREATE INDEX PRIV_SERIES_FK ON PUBLIC.PRIV_INSTANCE(SERIES_FK)
CREATE INDEX PRIV_INST_TYPE ON PUBLIC.PRIV_INSTANCE(PRIV_TYPE)
CREATE INDEX PRIV_SOP_IUID ON PUBLIC.PRIV_INSTANCE(SOP_IUID)
CREATE INDEX PRIV_INST_CREATED ON PUBLIC.PRIV_INSTANCE(CREATED_TIME)
CREATE MEMORY TABLE PUBLIC.PRIV_FILE(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,INSTANCE_FK BIGINT,FILESYSTEM_FK BIGINT,FILEPATH VARCHAR(256) NOT NULL,FILE_TSUID VARCHAR(256) NOT NULL,FILE_MD5 VARCHAR(256),FILE_SIZE BIGINT,FILE_STATUS INTEGER,FOREIGN KEY(INSTANCE_FK) REFERENCES PUBLIC.PRIV_INSTANCE(PK),FOREIGN KEY(FILESYSTEM_FK) REFERENCES PUBLIC.FILESYSTEM(PK))
ALTER TABLE PUBLIC.PRIV_FILE ALTER COLUMN PK RESTART WITH 0
CREATE INDEX PRIV_INSTANCE_FK ON PUBLIC.PRIV_FILE(INSTANCE_FK)
CREATE INDEX PRIV_FS_FK ON PUBLIC.PRIV_FILE(FILESYSTEM_FK)
CREATE MEMORY TABLE PUBLIC.PUBLISHED_STUDY(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,STUDY_FK BIGINT,CREATED_TIME TIMESTAMP,UPDATED_TIME TIMESTAMP,DOC_UID VARCHAR(256),DOCENTRY_UID VARCHAR(256),REPOSITORY_UID VARCHAR(256),STATUS INTEGER NOT NULL,FOREIGN KEY(STUDY_FK) REFERENCES PUBLIC.STUDY(PK))
ALTER TABLE PUBLIC.PUBLISHED_STUDY ALTER COLUMN PK RESTART WITH 0
CREATE INDEX PUBLISHED_STUDY ON PUBLIC.PUBLISHED_STUDY(STUDY_FK)
CREATE INDEX PUBLISHED_STUDY_STATUS ON PUBLIC.PUBLISHED_STUDY(STATUS)
CREATE INDEX REPOSITORY_UID ON PUBLIC.PUBLISHED_STUDY(REPOSITORY_UID)
CREATE MEMORY TABLE PUBLIC.DEVICE(PK BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,STATION_NAME VARCHAR(256) NOT NULL,STATION_AET VARCHAR(256) NOT NULL,MODALITY VARCHAR(256) NOT NULL)
ALTER TABLE PUBLIC.DEVICE ALTER COLUMN PK RESTART WITH 0
CREATE UNIQUE INDEX DEV_STATION_NAME ON PUBLIC.DEVICE(STATION_NAME)
CREATE MEMORY TABLE PUBLIC.REL_DEV_PROTO(DEVICE_FK BIGINT,PRCODE_FK BIGINT,FOREIGN KEY(DEVICE_FK) REFERENCES PUBLIC.DEVICE(PK),FOREIGN KEY(PRCODE_FK) REFERENCES PUBLIC.CODE(PK))
CREATE INDEX DEVICE_FK ON PUBLIC.REL_DEV_PROTO(DEVICE_FK)
CREATE INDEX PRCODE_FK ON PUBLIC.REL_DEV_PROTO(PRCODE_FK)
CREATE MEMORY TABLE PUBLIC.USERS(USER_ID VARCHAR(256) PRIMARY KEY,PASSWD VARCHAR(256))
CREATE MEMORY TABLE PUBLIC.ROLES(USER_ID VARCHAR(256),ROLES VARCHAR(256),FOREIGN KEY(USER_ID) REFERENCES PUBLIC.USERS(USER_ID))
CREATE INDEX USER_ID ON PUBLIC.ROLES(USER_ID)
ALTER SEQUENCE SYSTEM_LOBS.LOB_ID RESTART WITH 1
SET DATABASE DEFAULT INITIAL SCHEMA PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.SQL_IDENTIFIER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.YES_OR_NO TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.TIME_STAMP TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CARDINAL_NUMBER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CHARACTER_DATA TO PUBLIC
GRANT DBA TO SA
SET SCHEMA SYSTEM_LOBS
INSERT INTO BLOCKS VALUES(0,2147483647,0)
SET SCHEMA PUBLIC
INSERT INTO JBM_DUAL VALUES(1)
INSERT INTO JBM_COUNTER VALUES('CHANNEL_ID',70)
INSERT INTO JBM_COUNTER VALUES('MESSAGE_ID',20480)
INSERT INTO JBM_USER VALUES('dynsub','dynsub',NULL)
INSERT INTO JBM_USER VALUES('guest','guest',NULL)
INSERT INTO JBM_USER VALUES('j2ee','j2ee',NULL)
INSERT INTO JBM_USER VALUES('john','needle','DurableSubscriberExample')
INSERT INTO JBM_USER VALUES('nobody','nobody',NULL)
INSERT INTO JBM_ROLE VALUES('durpublisher','dynsub')
INSERT INTO JBM_ROLE VALUES('publisher','dynsub')
INSERT INTO JBM_ROLE VALUES('guest','guest')
INSERT INTO JBM_ROLE VALUES('j2ee','guest')
INSERT INTO JBM_ROLE VALUES('john','guest')
INSERT INTO JBM_ROLE VALUES('durpublisher','john')
INSERT INTO JBM_ROLE VALUES('publisher','john')
INSERT INTO JBM_ROLE VALUES('subscriber','john')
INSERT INTO JBM_ROLE VALUES('noacc','nobody')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'AttributesModificationScu','queue.AttributesModificationScu',NULL,2,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'AttributesModification_web','queue.AttributesModification_web',NULL,24,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'DLQ','queue.DLQ',NULL,0,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'DeleteStudy','queue.DeleteStudy',NULL,3,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'ExpiryQueue','queue.ExpiryQueue',NULL,1,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'ExportManager','queue.ExportManager',NULL,4,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'FileCopy','queue.FileCopy',NULL,5,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'FileMove','queue.FileMove',NULL,6,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'HL7Send','queue.HL7Send',NULL,7,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'HL7SendV2','queue.HL7SendV2',NULL,22,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'IANSCU_web','queue.IANSCU_web',NULL,23,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'IANScu','queue.IANScu',NULL,8,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'MCMScu','queue.MCMScu',NULL,9,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'MPPSScu','queue.MPPSScu',NULL,11,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'MoveScu','queue.MoveScu',NULL,10,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'MoveScu_web','queue.MoveScu_web',NULL,25,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'PPSExceptionMgt','queue.PPSExceptionMgt',NULL,12,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'PPSScu','queue.PPSScu',NULL,13,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'Prefetch','queue.Prefetch',NULL,14,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'RejectionNoteSCU','queue.RejectionNoteSCU',NULL,26,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'RejectionNoteStored','queue.RejectionNoteStored',NULL,15,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'Sendmail','queue.Sendmail',NULL,16,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'StgCmtScuScp','queue.StgCmtScuScp',NULL,17,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'StudyMgtScu','queue.StudyMgtScu',NULL,18,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'TCStoreScu','queue.TCStoreScu',NULL,27,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'UPSScp','queue.UPSScp',NULL,20,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'UpgradeToEnhancedMF','queue.UpgradeToEnhancedMF',NULL,19,'N','N')
INSERT INTO JBM_POSTOFFICE VALUES('JMS post office',0,'WadoPrefetch','queue.WadoPrefetch',NULL,21,'N','N')
INSERT INTO AE VALUES(0,'DCM4CHEE','localhost',11112,NULL,'DCM4CHEE',NULL,NULL,NULL,NULL,NULL,'This dcm4chee archive instance',NULL,NULL,NULL,NULL,'1',NULL)
INSERT INTO AE VALUES(1,'CDRECORD','localhost',10104,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Media Creation Server (part of dcm4chee)',NULL,NULL,NULL,NULL,'1',NULL)
INSERT INTO USERS VALUES('admin','0DPiKuNIrrVmD8IUCuw1hQxNqZc=')
INSERT INTO USERS VALUES('user','Et6pb+wgWTVmq3VpLJlJWWgzrck=')
INSERT INTO ROLES VALUES('admin','JBossAdmin')
INSERT INTO ROLES VALUES('admin','WebAdmin')
INSERT INTO ROLES VALUES('admin','WebUser')
INSERT INTO ROLES VALUES('admin','McmUser')
INSERT INTO ROLES VALUES('admin','AuditLogUser')
INSERT INTO ROLES VALUES('admin','Doctor')
INSERT INTO ROLES VALUES('user','WebUser')
INSERT INTO ROLES VALUES('user','McmUser')
INSERT INTO ROLES VALUES('user','Doctor')
